version: 2
aliases:
  ## Constants
  workspace: &workspace ~/kancha-ui
  xcode_version: &xcode_version '10.2.1'
  gradle_cache_path: &gradle_cache_path gradle_cache-{{ checksum "demo/android/build.gradle" }}-{{ checksum  "demo/android/app/build.gradle" }}

  ## Node Cache
  restore-cache: &restore-cache
    keys:
      - v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
      - v1-dependencies-{{ .Branch }}

  save-node-cache: &save-node-cache
    key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules

  save-ios-cache: &save-ios-cache
    key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules
      - ios/build

  ## Node Dependency Downloads
  install-node-dependencies: &install-node-dependencies
    name: Install node dependencies
    command: yarn install

  ## Android Configurations
  android_config: &android_config
    working_directory: *workspace
    macos:
      xcode: *xcode_version
    shell: /bin/bash --login -eo pipefail
    environment:
      TERM: dumb
      JVM_OPTS: -Xmx3200m

  ## Android Cache
  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_cache_path
  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_cache_path
      paths:
        - ~/.gradle

  ## Dependency Downloads
  download_android_dependencies: &download_android_dependencies
    run:
      name: Download Android Dependencies
      command: cd demo/android && ./gradlew androidDependencies

defaults: &defaults
  working_directory: *workspace

jobs:
  test-android-e2e:
    <<: *android_config
    steps:
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/tools/bin"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
            echo 'export JAVA_HOME=/Library/Java/Home' >> $BASH_ENV
      - run:
          name: Install Android sdk
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run: /usr/libexec/java_home
      # - run:
      #     name: Install emulator dependencies
      #     command: (yes | sdkmanager "platform-tools" "platforms;android-26" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;26.0.0" "system-images;android-26;google_apis;x86" "emulator" --verbose) || true
      # - *restore_gradle_cache
      # - *download_android_dependencies
      # - *save_gradle_cache
      # - run: avdmanager create avd -n Pixel_2_API_26 -k "system-images;android-26;google_apis;x86" -g google_apis -d "Nexus 5"
      # - run:
      #     name: Run emulator in background
      #     command: /usr/local/share/android-sdk/tools/emulator @Pixel_2_API_26 -skin 1080x2066 -memory 2048 -noaudio
      #     background: true

  # e2e tests with detox
  test-ios-e2e:
    <<: *defaults
    macos:
      xcode: *xcode_version
    steps:
      - checkout
      - run:
          name: Install AppleSim Utils
          command: |
            brew update
            brew tap wix/brew
            brew install --HEAD applesimutils
      - run:
          name: Install Detox CLI
          command: npm install -g detox-cli
      - run: *install-node-dependencies
      - run:
          name: Compile TypeScript
          command: yarn build
      - run:
          name: Detox e2e build
          command: detox build -c ios.sim.release
      - run:
          name: Detox e2e test
          command: detox test -c ios.sim.release --cleanup

  # unit tests
  test-js:
    <<: *defaults
    docker:
      - image: 'circleci/node:latest'
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *install-node-dependencies
      - save_cache: *save-ios-cache
      - run: yarn test

  # publish to npm
  publish-npm:
    <<: *defaults
    branches:
      only:
        - master
        - beta
    docker:
      - image: 'circleci/node:latest'
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *install-node-dependencies
      - run:
          name: Release version to npm
          command: yarn semantic-release

workflows:
  version: 2

  unit-ios-android-e2e:
    jobs:
      - test-android-e2e
      #- test-js
      #- test-ios-e2e:
      #    requires:
      #      - test-js
      # To be enabled when a beta branch is created
      # - publish-npm:
      #     requires:
      #       - test-js
      #       - test-ios-e2e
